// Generated by LiveScript 1.3.1
var moment, getDate, info, warn, error, taskInfo, taskWarn, taskError, disabledTask, startTask, finishTask, out$ = typeof exports != 'undefined' && exports || this;
moment = require('moment');
out$.getDate = getDate = function(){
  return moment().format();
};
out$.info = info = function(message){
  console.log(getDate() + " " + message);
};
out$.warn = warn = function(message){
  console.log(getDate() + " " + message);
};
out$.error = error = function(message){
  console.log(getDate() + " error   " + message);
};
out$.taskInfo = taskInfo = curry$(function(task, message){
  info(task + ": " + message);
});
out$.taskWarn = taskWarn = curry$(function(task, message){
  info(task + ": " + message);
});
out$.taskError = taskError = curry$(function(task, message){
  info(task + ": " + message);
});
out$.disabledTask = disabledTask = function(name){
  return info(name + ": Disabled");
};
out$.startTask = startTask = function(name){
  return info(name + ": Start");
};
out$.finishTask = finishTask = function(name){
  return info(name + ": Finish");
};
function curry$(f, bound){
  var context,
  _curry = function(args) {
    return f.length > 1 ? function(){
      var params = args ? args.concat() : [];
      context = bound ? context || this : this;
      return params.push.apply(params, arguments) <
          f.length && arguments.length ?
        _curry.call(context, params) : f.apply(context, params);
    } : f;
  };
  return _curry();
}