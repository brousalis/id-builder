// Generated by LiveScript 1.3.1
var stylus, async, fileSystem, logging, sourceExtension, targetExtension, sourceFilePathMatches, compileChunk, compileFile, compileAllFiles, out$ = typeof exports != 'undefined' && exports || this;
stylus = require('stylus');
async = require('async');
fileSystem = require("./file-system");
logging = require("./logging");
out$.sourceExtension = sourceExtension = "styl";
out$.targetExtension = targetExtension = "css";
out$.sourceFilePathMatches = sourceFilePathMatches = curry$(function(options, sourceFilePath){
  return sourceFilePath.match(RegExp('^' + options.sourcePath + '.+\\.' + sourceExtension + '$'));
});
out$.compileChunk = compileChunk = function(options, chunk, cb){
  stylus.render(chunk, cb);
};
out$.compileFile = compileFile = fileSystem.compileFile(compileChunk);
out$.compileAllFiles = compileAllFiles = fileSystem.compileAllFiles(sourceFilePathMatches, compileFile, sourceExtension, targetExtension);
function curry$(f, bound){
  var context,
  _curry = function(args) {
    return f.length > 1 ? function(){
      var params = args ? args.concat() : [];
      context = bound ? context || this : this;
      return params.push.apply(params, arguments) <
          f.length && arguments.length ?
        _curry.call(context, params) : f.apply(context, params);
    } : f;
  };
  return _curry();
}