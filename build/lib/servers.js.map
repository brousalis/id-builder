{"version":3,"sources":["unknown"],"names":[],"mappings":"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","file":"unknown","sourcesContent":["// import _ from 'lodash';\nimport { exists } from 'fs';\n\nimport log from 'loglevel';\nimport { Monitor } from 'forever-monitor';\nimport { each } from 'async';\n\nimport logging from './logging';\n\nconst monitors = {};\n\nfunction addPath(path, cb) {\n  log.debug('lib/servers.addPath', path);\n\n  const monitor = new Monitor(path, {\n    command: 'node'\n  });\n\n  monitors[path] = monitor;\n\n  monitor.start();\n\n  cb();\n}\n\nfunction removePath(path, cb) {\n  log.debug('lib/servers.removePath', path);\n\n  const monitor = monitors[path];\n\n  monitor.kill(true);\n\n  delete monitors[path];\n\n  cb();\n}\n\nfunction restartPath(path, cb) {\n  log.debug('lib/servers.restartPath', path);\n\n  const monitor = monitors[path];\n\n  monitor.restart();\n\n  cb();\n}\n\nfunction sourceFilePathMatches(options, sourceFilePath) {\n  log.debug('lib/servers.sourceFilePathMatches', `^${options.sourceDirectoryPath}`, sourceFilePath);\n\n  return !!sourceFilePath.match(new RegExp(`^${options.sourceDirectoryPath}`));\n}\n\nfunction startServer(options, filePath, cb) {\n  log.debug('lib/servers.startServer');\n\n  exists(filePath, result => {\n    if (!result) {\n      logging.taskInfo(options.taskName, `skipping ${filePath} (Does not exist).`);\n      return cb();\n    }\n\n    const monitor = monitors[filePath];\n\n    if (monitor) {\n      restartPath(filePath, cb);\n    } else {\n      addPath(filePath, cb);\n    }\n  });\n}\n\nfunction stopServer(options, filePath, cb) {\n  log.debug('lib/servers.stopServer');\n\n  exists(filePath, result => {\n    if (!result) {\n      logging.taskInfo(options.taskName, `skipping ${filePath} (Does not exist).`);\n      return cb();\n    }\n\n    const monitor = monitors[filePath];\n\n    if (monitor) {\n      removePath(filePath, cb);\n    } else {\n      logging.taskInfo(options.taskName, `skipping ${filePath} (Monitor does not exist).`);\n      cb();\n    }\n  });\n}\n\nfunction restartServer(options, filePath, cb) {\n  log.debug('lib/servers.restartServer');\n\n  exists(filePath, result => {\n    if (!result) {\n      logging.taskInfo(options.taskName, `skipping ${filePath} (Does not exist).`);\n      return cb();\n    }\n\n    removePath(filePath, e => {\n      if (e) {\n        return cb(e);\n      }\n\n      addPath(filePath, cb);\n    });\n  });\n}\n\nfunction runServers(options, cb) {\n  log.debug('lib/servers.runServers');\n\n  each(options.paths, (v, eachCb) => {\n    startServer(options, `${options.sourceDirectoryPath}/${v}`, eachCb);\n  }, cb);\n}\n\nfunction restartServers(options, cb) {\n  log.debug('lib/servers.restartServers');\n\n  each(options.paths, (v, eachCb) => {\n    restartServer(options, `${options.sourceDirectoryPath}/${v}`, eachCb);\n  }, cb);\n}\n\nexport default {\n  addPath,\n  removePath,\n  restartPath,\n  sourceFilePathMatches,\n  startServer,\n  stopServer,\n  restartServer,\n  runServers,\n  restartServers\n};\n"]}