{"version":3,"sources":["unknown"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;AAEtB,SAAS,KAAK,CAAC,CAAC,EAAU;MAAR,CAAC,yDAAG,EAAE;;AACtB,MAAM,CAAC,GAAG,EAAE,CAAC;;AAEb,sBAAE,IAAI,CAAC,CAAC,EAAE,UAAS,MAAM,EAAE,IAAI,EAAE;AAC/B,QAAM,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;;AAEvB,QAAI,oBAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAE,OAAO,CAAC,MAAM,CAAC,EAAE;AAC5C,OAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACjC,MAAM;AACL,UAAI,CAAC,oBAAE,WAAW,CAAC,MAAM,CAAC,EAAE;AAC1B,SAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;OAClB,MAAM;AACL,SAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;OAClB;KACF;GACF,CAAC,CAAC;;AAEH,SAAO,CAAC,CAAC;CACV;;qBAEc,KAAK","file":"unknown","sourcesContent":["import _ from 'lodash';\n\nfunction merge(x, y = {}) {\n  const z = {};\n\n  _.each(x, function(xValue, xKey) {\n    const yValue = y[xKey];\n\n    if (_.isObject(xValue) && !_.isArray(xValue)) {\n      z[xKey] = merge(xValue, yValue);\n    } else {\n      if (!_.isUndefined(yValue)) {\n        z[xKey] = yValue;\n      } else {\n        z[xKey] = xValue;\n      }\n    }\n  });\n\n  return z;\n}\n\nexport default merge;\n"]}