{"version":3,"sources":["unknown"],"names":[],"mappings":";;;;;;;;;;;;;;;;qBAA0B,OAAO;;8BAET,oBAAoB;;;;IAEtC,eAAe;YAAf,eAAe;;WAAf,eAAe;0BAAf,eAAe;;+BAAf,eAAe;;;eAAf,eAAe;;WACP,sBAAC,KAAK,EAAE,EAAE,EAAE;AACtB,UAAI;AACF,YAAM,eAAe,GAAG,sBAAU,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/D,YAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;;AAEvD,UAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;OACtB,CAAC,OAAO,CAAC,EAAE;AACV,eAAO,EAAE,CAAC,CAAC,CAAC,CAAC;OACd;KACF;;;WAEE,aAAC,EAAE,EAAE;AACN,UAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;KAC1B;;;SAdG,eAAe;;;qBAiBN,eAAe","file":"unknown","sourcesContent":["import { transform } from 'babel';\n\nimport CompileTask from '../lib/CompileTask';\n\nclass BabelMapCompile extends CompileTask {\n  compileChunk(chunk, cb) {\n    try {\n      const transformResult = transform(chunk, this.options.options);\n      const jsonResult = JSON.stringify(transformResult.map);\n\n      cb(null, jsonResult);\n    } catch (e) {\n      return cb(e);\n    }\n  }\n\n  run(cb) {\n    this.compileAllFiles(cb);\n  }\n}\n\nexport default BabelMapCompile;\n"]}