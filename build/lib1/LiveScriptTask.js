// Generated by LiveScript 1.3.1
var Task, LiveScriptTask, out$ = typeof exports != 'undefined' && exports || this;
Task = require("./Task");
out$.LiveScriptTask = LiveScriptTask = (function(superclass){
  var prototype = extend$((import$(LiveScriptTask, superclass).displayName = 'LiveScriptTask', LiveScriptTask), superclass).prototype, constructor = LiveScriptTask;
  function LiveScriptTask(options){
    LiveScriptTask.superclass;
  }
  prototype.start = function(){};
  prototype.stop = function(){};
  prototype.restart = function(){};
  return LiveScriptTask;
}(Task));
function extend$(sub, sup){
  function fun(){} fun.prototype = (sub.superclass = sup).prototype;
  (sub.prototype = new fun).constructor = sub;
  if (typeof sup.extended == 'function') sup.extended(sub);
  return sub;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}