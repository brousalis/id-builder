{"version":3,"sources":["unknown"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;kBAEE,IAAI;;;;wBAEH,UAAU;;;;sBACP,QAAQ;;;;sBACR,QAAQ;;;;oBACJ,MAAM;;mCAEL,mCAAmC;;;;6BAC9B,6BAA6B;;AAE1D,IAAM,cAAc,yBAAyB,CAAC;;AAE9C,QAAQ,CAAC,aAAa,EAAE,YAAW;AACjC,YAAU,CAAC,UAAS,EAAE,EAAE;AACtB,QAAI,CAAC,aAAa,GAAG,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEnE,6BAAO,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;GAChC,CAAC,CAAC;;AAEH,WAAS,CAAC,UAAS,EAAE,EAAE;AACrB,6BAAO,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;GAChC,CAAC,CAAC;;AAEH,UAAQ,CAAC,uBAAuB,EAAE,YAAW;;GAE5C,CAAC,CAAC;;AAEH,UAAQ,CAAC,WAAW,EAAE,YAAW,EAChC,CAAC,CAAC;;AAEH,UAAQ,CAAC,QAAQ,EAAE,YAAW,EAC7B,CAAC,CAAC;CACJ,CAAC,CAAC","file":"unknown","sourcesContent":["'use strict';\n\nimport fs from 'fs';\n\nimport log from 'loglevel';\nimport mkdirp from 'mkdirp';\nimport rimraf from 'rimraf';\nimport { expect } from 'chai';\n\nimport browsersync from '../build/../../../lib/browsersync';\nimport { randomString } from '../build/../../../lib/tests';\n\nconst functionSource = `const x = y => y * 2`;\n\ndescribe('browsersync', function() {\n  beforeEach(function(cb) {\n    this.directoryPath = '.tmp/' + Math.random().toString(36).slice(7);\n\n    mkdirp(this.directoryPath, cb);\n  });\n\n  afterEach(function(cb) {\n    rimraf(this.directoryPath, cb);\n  });\n\n  describe('sourceFilePathMatches', function() {\n    // See implementation of copy.sourceFilePathMatches tests.\n  });\n\n  describe('runServer', function() {\n  });\n\n  describe('reload', function() {\n  });\n});\n"]}