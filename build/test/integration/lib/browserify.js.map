{"version":3,"sources":["unknown"],"names":[],"mappings":"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","file":"unknown","sourcesContent":["'use strict';\n\nimport fs from 'fs';\n\nimport log from 'loglevel';\nimport mkdirp from 'mkdirp';\nimport rimraf from 'rimraf';\nimport { expect } from 'chai';\n\nimport browserify from '../build/../../../lib/browserify';\nimport { randomString } from '../build/../../../lib/tests';\n\nconst functionSource = `const x = y => y * 2`;\n\ndescribe('browserify', function() {\n  beforeEach(function(cb) {\n    this.directoryPath = '.tmp/' + Math.random().toString(36).slice(7);\n\n    mkdirp(this.directoryPath, cb);\n  });\n\n  afterEach(function(cb) {\n    rimraf(this.directoryPath, cb);\n  });\n\n  describe('sourceExtension', function() {\n    it('should be defined', function(cb) {\n      expect(browserify.sourceExtension).to.be.a('string')['with'].length.above(0);\n\n      cb();\n    });\n  });\n\n  describe('targetExtension', function() {\n    it('should be defined', function(cb) {\n      expect(browserify.targetExtension).to.be.a('string')['with'].length.above(0);\n\n      cb();\n    });\n  });\n\n  describe('pathReloads(options, path)', function() {\n  });\n\n  describe('sourceFilePathMatches', function() {\n    describe('when the `sourceFilePath` is the `targetPath`', function() {\n      it('should return `false`', function(cb) {\n        const options = {\n          targetFilePath: 'x/y.js',\n          sourceDirectoryPath: 'x'\n        };\n\n        expect(browserify.sourceFilePathMatches(options, 'x/y.js')).to.equal(false);\n\n        cb();\n      });\n    });\n\n    describe('when the `sourceFilePath` is in the the `sourceDirectoryPath`', function() {\n      it('should return `true`', function(cb) {\n        const options = {\n          targetPath: 'x/y.js',\n          sourceDirectoryPath: 'x'\n        };\n\n        expect(browserify.sourceFilePathMatches(options, 'x/q.js')).to.equal(true);\n\n        cb();\n      });\n    });\n\n    describe('when the `sourceFilePath` is not in the the `sourceDirectoryPath`', function() {\n      it('should return `false`', function(cb) {\n        const options = {\n          targetPath: 'x/q.js',\n          sourceDirectoryPath: 'a'\n        };\n\n        expect(browserify.sourceFilePathMatches(options, 'x/q.js')).to.equal(false);\n\n        cb();\n      });\n    });\n  });\n\n  describe('matchesTargetPath', function() {\n    describe('when the `path` is the `targetPath`', function() {\n      it('should return `true`', function(cb) {\n        const options = {\n          targetPath: 'x/y.js',\n        };\n\n        expect(browserify.matchesTargetPath(options, 'x/y.js')).to.equal(true);\n\n        cb();\n      });\n    });\n\n    describe('when the `path` is not the `targetPath`', function() {\n      it('should return `false`', function(cb) {\n        const options = {\n          targetPath: 'x/y.js',\n        };\n\n        expect(browserify.matchesTargetPath(options, 'x/z.js')).to.equal(false);\n\n        cb();\n      });\n    });\n  });\n\n  describe('compileAllFiles', function() {\n    beforeEach(function (cb) {\n      this.sourceDirectoryPath = `${this.directoryPath}/src`;\n      this.buildDirectoryPath = `${this.directoryPath}/build`;\n\n      mkdirp(this.sourceDirectoryPath, e => {\n        if (e) { cb(e); }\n\n        mkdirp(this.buildDirectoryPath, e => {\n          if (e) { cb(e); }\n\n          cb();\n        });\n      });\n    });\n\n    describe('when compiling one source file with valid ES6', function() {\n      it('should compile one build file that matches the expected output', function(cb) {\n        const sourceFilePath = `${this.directoryPath}/src/entry.js`;\n        const buildFilePath = `${this.directoryPath}/build/target.js`;\n        const options = {\n          sourceFilePath: sourceFilePath,\n          targetFilePath: buildFilePath\n        };\n        const chunk = functionSource;\n        //const expected = this.functionOutputSource;\n\n        fs.writeFile(sourceFilePath, chunk, e => {\n          if (e) { cb(e); }\n\n          browserify.compileAllFiles(options, e => {\n            if (e) { cb(e); }\n\n            // Just check that it is being written, since we can't check the\n            // contents of the output, because it contains file path specific\n            // code which isn't available at design time available at design\n            // time.\n            fs.readFile(buildFilePath, cb);\n          });\n        });\n      });\n    });\n  });\n\n  describe('watch', function() {\n  });\n});\n"]}