{"version":3,"sources":["unknown"],"names":[],"mappings":";;;;;;;;;;;;;;;;qBAA0B,OAAO;;2BAEZ,iBAAiB;;;;IAEhC,aAAa;YAAb,aAAa;;AACN,WADP,aAAa,GACS;QAAd,OAAO,yDAAG,EAAE;;0BADpB,aAAa;;AAEf,+BAFE,aAAa,6CAET,OAAO,EAAE;GAChB;;eAHG,aAAa;;WAKL,sBAAC,KAAK,EAAE;;;AAClB,aAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,YAAI;AACF,iBAAO,CAAC,sBAAU,KAAK,EAAE,MAAK,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;SACtD,CAAC,OAAO,CAAC,EAAE;AACV,gBAAM,CAAC,CAAC,CAAC,CAAC;SACX;OACF,CAAC,CAAC;KACJ;;;SAbG,aAAa;;;qBAgBJ,aAAa","file":"unknown","sourcesContent":["import { transform } from 'babel';\n\nimport Compiler from '../lib/Compiler';\n\nclass BabelCompiler extends Compiler {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  compileChunk(chunk) {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(transform(chunk, this.options.options).code);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n\nexport default BabelCompiler;\n"]}